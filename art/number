#!/usr/bin/perl
use strict;
use warnings;
use Time::Local;
use Image::Magick;

my @ones = ( "", "One", "Two", "Three", "Four", 
	     "Five", "Six", "Seven", "Eight", "Nine" );
my @tens = ( "", "Teen", "Twenty", "Thirty", "Forty", 
	     "Fifty", "Sixty", "Seventy", "Eighty", "Ninety" );

my @gravities = ( "NorthWest", "NorthEast",
		  "West",      "East",
		  "SouthWest", "SouthEast" );


my @fonts = Image::Magick->QueryFont();

my $size      = "1500x1020";
my $bg        = "ivory";
my $ps_init   =  200;
my $ps_inc    =  1.0;
my $x_origin  =  500;
my $y_origin  =  400;

my $hue_drift_limit = 1.0;
my $slew_lower_limit = 4.0;
my $slew_upper_limit = 9.0;
my $radius_limit = 200;
my $origin_drift_limit = 0.20; #in radians

my $text;

# calculate the number of days we've been living through this
my $then = timelocal(0,0,0,13,2,2020);   # March 13, 2020 --- lockdown
my $now = time();
my $days = int( ($now - $then) / (24 * 60 * 60) );
##printf "then:%d now:%d days since:%d\n", $then, $now, $days;

while (1) 
{
    my $hue_init  =  rand(360); 
    my $hue_inc   =  rand($hue_drift_limit) - $hue_drift_limit;
    my $saturation = 255;
    my $bright_init= (255 - $days) / 2;
    my $bright_inc = 1;
    #my $alpha_init= 1.0; my $alpha_inc = -0.005;

    my $font = $fonts[rand(scalar @fonts)];
    
    my $gravity   =  $gravities[int(rand(@gravities))];
    my $slew_inc  =  $slew_lower_limit + int(rand($slew_upper_limit - $slew_lower_limit));
    my $origin_inc=  rand($origin_drift_limit); # in radians
    my $xradius    =  int(rand($radius_limit));
    my $yradius    =  int(rand($radius_limit)); # = xradius for cicle

    $text = "";

    my $filename = $days ."-". $hue_init ."-". $hue_inc ."-". $gravity
	."-". $font ."-". $xradius ."-". $yradius ."-.". int(100 * $origin_inc)
	."-". $slew_inc .".gif";

    my $image = Image::Magick->new(size=>$size);
    $image->ReadImage("canvas:".$bg);

    for (my $i=1; $i<=$days; $i++) {

	## Turn the integer into its English name, in global $text
	makeText( $i );

	my $pointsize = $ps_init - ($i / $ps_inc);
	my $hue       = $hue_init + ($i * $hue_inc);
	my $bright    = $bright_init + ($i * $bright_inc);
	#my $alpha    = $alpha_init + ($i * $alpha_inc);
	my $fillcolor = "hsl(". $hue .",". $saturation .",". $bright .")";

	my $slew      = ($i * $slew_inc);
	my $x         = $x_origin + ( cos($i*$origin_inc) * $xradius);
	my $y         = $y_origin + ( sin($i*$origin_inc) * $yradius);
	my $geometry  = "+".$x."+".$y;

	$image->Annotate(
	    font=>$font,
	    text=>$text,
	    pointsize=>$pointsize,
	    fill=>$fillcolor, stroke=>"black",
	    geometry=>$geometry,
	    rotate=>$slew,
	    gravity=>$gravity,
	    );

    }

    printf "\n#days:%d \nhue:%d %.3f \ngravity:%s \nfont:%s \nxradius:%d \nyradius:%d \nradians inc:%.3f \nrotation inc:%d\n",
    $days, $hue_init, $hue_inc, $gravity, $font, $xradius, $yradius, $origin_inc,  $slew_inc;

    $image->Display;   ###(loop=>1,delay=>1000); #to close after 10 secs??

    print "Save this one? (y/N)";
    if ( 'y' eq lc substr <STDIN>, 0, 1 ) {
	$image->Write( $filename ); # save
	exit;			    # and exit
    }

    undef $image;

}
        
sub makeText {

    my $num = $_[0];
    doOnes( $num % 10 );
    doTens( ($num / 10 ) % 10 );
    doHundreds( ($num / 100 ) % 10 );
}
        
sub doOnes {
    $text = $ones[$_[0]];
}

sub doTens {
    my $num = $_[0];
    if ( $num == 0 )          { ;; }
    elsif ( $num > 1 )        { $text = $tens[$num] . " " . $text;  }
    elsif ( $text eq "" )     { $text = "Ten"; }
    elsif ( $text eq "One")   { $text = "Eleven"; }
    elsif ( $text eq "Two")   { $text = "Twelve"; }
    elsif ( $text eq "Three") { $text = "Thirteen"; }
    elsif ( $text eq "Five")  { $text = "Fifteen"; }
    else                      { $text = $text . "teen"; }
}


sub doHundreds {
    my $num =$_[0];
    if ($num > 0) { $text = $ones[$_[0]] . " Hundred " . $text; }
}
